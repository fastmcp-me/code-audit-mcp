name: V4 Release and Publish

on:
  push:
    tags:
      - 'v4.*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 4.0.0)'
        required: true
        default: '4.0.0'

env:
  NODE_VERSION: '18'
  REGISTRY_URL: 'https://registry.npmjs.org'
  PACKAGE_SCOPE: '@moikas-code'

jobs:
  validate:
    name: Validate and Prepare
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.REGISTRY_URL }}
          cache: 'npm'

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          elif [ "${{ github.event_name }}" = "push" ] && [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION="${{ github.ref_name }}"
            VERSION="${VERSION#v}"
          else
            VERSION=$(node -p "require('./package.json').version")
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm run test-audit

  build:
    name: Build Artifacts
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.REGISTRY_URL }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update package.json for scoped publication
        run: |
          npm version ${{ needs.validate.outputs.version }} --no-git-tag-version
          sed -i 's/"name": "@moikas\/code-audit-mcp"/"name": "@moikas-code\/code-audit-mcp"/' package.json
          cat package.json | grep -A 5 -B 5 '"name":'

      - name: Build project
        run: npm run build

      - name: Create tarball
        run: npm pack

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: npm-package
          path: |
            *.tgz
            dist/
            bin/
            package.json
          retention-days: 30

  test-matrix:
    name: Test on Multiple Platforms
    needs: [validate, build]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: ['18', '20', '22']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: npm-package

      - name: Install and test package
        run: |
          npm install -g *.tgz
          code-audit --version || echo "Global install test failed"

  publish-npm:
    name: Publish to NPM
    needs: [validate, build, test-matrix]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.REGISTRY_URL }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: npm-package

      - name: Configure npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "@moikas-code:registry=https://registry.npmjs.org/" >> ~/.npmrc

      - name: Publish to NPM
        run: |
          npm publish *.tgz --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify publication
        run: |
          sleep 30
          npm view @moikas-code/code-audit-mcp@${{ needs.validate.outputs.version }} --json

  create-github-release:
    name: Create GitHub Release
    needs: [validate, publish-npm]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v4')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: npm-package

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.validate.outputs.tag }}
          name: Release ${{ needs.validate.outputs.tag }}
          draft: false
          prerelease: false
          files: |
            *.tgz
          body: |
            ## Changes in ${{ needs.validate.outputs.tag }}
            
            ### 🚀 New Features
            - Module System fixes for multi-file project support
            - Enhanced Runtime capabilities
            - Improved Standard Library implementation
            
            ### 🔧 Improvements
            - Better error handling and debugging
            - Performance optimizations
            - Enhanced CLI experience
            
            ### 📦 Installation
            ```bash
            npm install -g @moikas-code/code-audit-mcp@${{ needs.validate.outputs.version }}
            ```
            
            ### 🔗 Links
            - [NPM Package](https://www.npmjs.com/package/@moikas-code/code-audit-mcp)
            - [Documentation](https://github.com/warrengates/code-audit-mcp#readme)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Post-Release Notifications
    needs: [validate, publish-npm, create-github-release]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Success notification
        if: needs.publish-npm.result == 'success'
        run: |
          echo "✅ Successfully published @moikas-code/code-audit-mcp@${{ needs.validate.outputs.version }}"
          echo "📦 Package available at: https://www.npmjs.com/package/@moikas-code/code-audit-mcp"

      - name: Failure notification
        if: needs.publish-npm.result == 'failure'
        run: |
          echo "❌ Failed to publish @moikas-code/code-audit-mcp@${{ needs.validate.outputs.version }}"
          exit 1